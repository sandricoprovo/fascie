// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Business {
    id           Int                   @id @default(autoincrement())
    createdAt    DateTime              @default(now())
    updatedAt    DateTime              @updatedAt
    ownerName    String                @db.VarChar(255)
    businessName String                @db.VarChar(255)
    hasPaidFee   Boolean               @default(false)
    email        String                @unique
    password     String                @db.VarChar(30)
    hasShipping  Boolean
    bannerImg    String?               @db.VarChar(150)
    website      String?               @db.VarChar(150)
    twitter      String?               @db.VarChar(150)
    facebook     String?               @db.VarChar(150)
    instagram    String?               @db.VarChar(150)
    location     Location              @relation(fields: [locationId], references: [id])
    locationId   Int
    testimonials Testimonial[]
    followers    Business_Followers[]
    categories   Business_Categories[]
}

model Location {
    id            Int        @id @default(autoincrement())
    createdAt     DateTime   @default(now())
    updatedAt     DateTime   @updatedAt
    location      String     @db.VarChar(255)
    provinceState String     @db.VarChar(200)
    country       String     @db.VarChar(200)
    businesses    Business[]
}

model Testimonial {
    id          Int      @id @default(autoincrement())
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
    testimonial String   @db.VarChar(255)
    business    Business @relation(fields: [businessId], references: [id])
    businessId  Int
}

model User {
    id        Int                  @id @default(autoincrement())
    createdAt DateTime             @default(now())
    updatedAt DateTime             @updatedAt
    name      String               @db.VarChar(255)
    email     String               @db.VarChar(150)
    password  String               @db.VarChar(30)
    follows   Business_Followers[]
}

model Business_Followers {
    business   Business @relation(fields: [businessId], references: [id])
    businessId Int
    user       User     @relation(fields: [userId], references: [id])
    userId     Int
    followDate DateTime @default(now())

    @@id([businessId, userId])
}

model Category {
    id         Int                   @id @default(autoincrement())
    createdAt  DateTime              @default(now())
    updatedAt  DateTime              @updatedAt
    category   String                @db.VarChar(100)
    businesses Business_Categories[]
}

model Business_Categories {
    business   Business @relation(fields: [businessId], references: [id])
    businessId Int
    category   Category @relation(fields: [categoryId], references: [id])
    categoryId Int
    createdAt  DateTime @default(now())

    @@id([businessId, categoryId])
}
