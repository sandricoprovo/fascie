// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Businesses {
    id           Int                  @id @default(autoincrement())
    createdAt    DateTime             @default(now())
    updatedAt    DateTime             @updatedAt
    ownerName    String               @db.VarChar(255)
    businessName String               @db.VarChar(255)
    hasPaidFee   Boolean              @default(false)
    hasShipping  Boolean              @default(false)
    email        String               @unique
    password     String
    bannerImg    String?              @db.VarChar(150)
    website      String?              @db.VarChar(150)
    twitter      String?              @db.VarChar(150)
    facebook     String?              @db.VarChar(150)
    instagram    String?              @db.VarChar(150)
    location     Locations            @relation(fields: [locationId], references: [id])
    locationId   Int                  @db.Integer
    keywords     String[]
    testimonials Testimonials[]
    followers    Business_Followers[]
    category     Categories           @relation(fields: [categoriesId], references: [id])
    categoriesId Int
}

model Locations {
    id            Int          @id @default(autoincrement())
    createdAt     DateTime     @default(now())
    updatedAt     DateTime     @updatedAt
    location      String       @db.VarChar(255)
    provinceState String       @db.VarChar(200)
    country       String       @db.VarChar(200)
    businesses    Businesses[]
}

model Testimonials {
    id          Int        @id @default(autoincrement())
    createdAt   DateTime   @default(now())
    updatedAt   DateTime   @updatedAt
    testimonial String     @db.VarChar(255)
    business    Businesses @relation(fields: [businessId], references: [id])
    businessId  Int
}

model Users {
    id        Int                  @id @default(autoincrement())
    createdAt DateTime             @default(now())
    updatedAt DateTime             @updatedAt
    name      String               @db.VarChar(255)
    email     String               @db.VarChar(150)
    password  String               @db.VarChar(30)
    follows   Business_Followers[]
}

model Categories {
    id         Int          @id @default(autoincrement())
    createdAt  DateTime     @default(now())
    updatedAt  DateTime     @updatedAt
    category   String       @db.VarChar(100)
    businesses Businesses[]
}

model Business_Followers {
    business   Businesses @relation(fields: [businessId], references: [id])
    businessId Int        @db.Integer
    user       Users      @relation(fields: [userId], references: [id])
    userId     Int        @db.Integer
    followDate DateTime   @default(now())

    @@id([businessId, userId])
}
